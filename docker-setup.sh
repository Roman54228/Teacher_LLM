#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ Telegram Mini App –≤ Docker

set -e

echo "üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –¥–ª—è Telegram Mini App"
echo "========================================="

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker: https://docs.docker.com/get-docker/"
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose: https://docs.docker.com/compose/install/"
        exit 1
    fi
    
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
create_env_file() {
    if [ ! -f .env ]; then
        echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
        cat > .env << 'EOF'
# Telegram Bot (–ó–ê–ü–û–õ–ù–ò–¢–ï –°–í–û–ò –î–ê–ù–ù–´–ï)
TELEGRAM_BOT_TOKEN=your_bot_token_here

# YandexGPT API (–ó–ê–ü–û–õ–ù–ò–¢–ï –°–í–û–ò –î–ê–ù–ù–´–ï)
YANDEX_API_KEY=your_yandex_api_key
YANDEX_FOLDER_ID=your_yandex_folder_id

# Database
DATABASE_URL=sqlite:///data/interview_prep.db

# Production settings
FLASK_ENV=production
DEBUG=False
HOST=0.0.0.0
PORT=5000

# Domain (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –¥–æ–º–µ–Ω)
DOMAIN=localhost
EOF
        echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
        echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ API –∫–ª—é—á–∏!"
    else
        echo "‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    mkdir -p data logs static
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
interactive_mode() {
    echo "üîß –ó–∞–ø—É—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ..."
    echo "–í—ã —Å–º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º –≤—Ä—É—á–Ω—É—é"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    docker-compose down 2>/dev/null || true
    
    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
    echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
    docker-compose build
    
    # –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    echo "üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    docker-compose run --rm --service-ports telegram-mini-app
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞
auto_mode() {
    echo "ü§ñ –ó–∞–ø—É—Å–∫ –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    docker-compose down 2>/dev/null || true
    
    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
    echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
    docker-compose build
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    docker-compose up -d app
    
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
    echo "üì± –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000"
    echo
    echo "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  docker-compose logs -f app     # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
    echo "  docker-compose stop           # –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
    echo "  docker-compose restart app    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
    echo "  docker exec -it telegram-mini-app-server bash  # –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_docker
    create_directories
    create_env_file
    
    echo
    echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:"
    echo "1) –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º (–≤—ã –≤–æ–π–¥–µ—Ç–µ –≤ bash –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)"
    echo "2) –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º (–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)"
    echo "3) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "4) –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): " choice
    
    case $choice in
        1)
            interactive_mode
            ;;
        2)
            auto_mode
            ;;
        3)
            echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
            docker-compose down
            echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            ;;
        4)
            echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
            docker-compose ps
            echo
            echo "üìã –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
            docker-compose logs --tail=20 app 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            ;;
        *)
            echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"