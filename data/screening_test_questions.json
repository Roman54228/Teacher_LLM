{
  "Screening Test": {
    "Тест": [
      {
        "question": "Что такое машинное обучение?",
        "options": [
          "Процесс программирования компьютеров для выполнения конкретных задач",
          "Способность компьютеров учиться и улучшать производительность на основе данных",
          "Создание искусственного интеллекта путем копирования человеческого мозга",
          "Автоматизация рутинных задач с помощью скриптов"
        ],
        "correct_answer": "Способность компьютеров учиться и улучшать производительность на основе данных",
        "hint": "Машинное обучение фокусируется на способности систем автоматически улучшаться через опыт."
      },
      {
        "question": "Какой результат выполнения: list(range(3))",
        "options": [
          "[1, 2, 3]",
          "[0, 1, 2]",
          "[0, 1, 2, 3]",
          "[3]"
        ],
        "correct_answer": "[0, 1, 2]",
        "hint": "Функция range(n) генерирует числа от 0 до n-1 включительно."
      },
      {
        "question": "Что такое переобучение (overfitting) в машинном обучении?",
        "options": [
          "Модель слишком простая для решения задачи",
          "Модель хорошо работает на обучающих данных, но плохо на новых",
          "Процесс обучения занимает слишком много времени",
          "Модель не может запомнить обучающие данные"
        ],
        "correct_answer": "Модель хорошо работает на обучающих данных, но плохо на новых",
        "hint": "Переобучение происходит, когда модель слишком точно подстраивается под тренировочные данные."
      },
      {
        "question": "Какой тип данных в Python является изменяемым (mutable)?",
        "options": [
          "tuple",
          "string", 
          "list",
          "int"
        ],
        "correct_answer": "list",
        "hint": "Списки можно изменять после создания, в отличие от кортежей и строк."
      },
      {
        "question": "Что такое градиентный спуск?",
        "options": [
          "Метод визуализации данных",
          "Алгоритм оптимизации для нахождения минимума функции",
          "Способ разделения данных на тренировочные и тестовые",
          "Техника предобработки данных"
        ],
        "correct_answer": "Алгоритм оптимизации для нахождения минимума функции",
        "hint": "Градиентный спуск использует производные для поиска минимума функции потерь."
      },
      {
        "question": "Что выведет: print(len('Python'))",
        "options": [
          "5",
          "6",
          "7",
          "Ошибка"
        ],
        "correct_answer": "6",
        "hint": "Подсчитайте количество символов в слове 'Python'."
      },
      {
        "question": "Какая разница между обучением с учителем и без учителя?",
        "options": [
          "С учителем - дороже, без учителя - дешевле",
          "С учителем есть правильные ответы, без учителя - нет",
          "С учителем быстрее, без учителя - медленнее",
          "Никакой разницы нет"
        ],
        "correct_answer": "С учителем есть правильные ответы, без учителя - нет",
        "hint": "В обучении с учителем у нас есть целевая переменная (правильные ответы)."
      },
      {
        "question": "Как в Python проверить тип переменной x?",
        "options": [
          "typeof(x)",
          "type(x)",
          "x.type()",
          "class(x)"
        ],
        "correct_answer": "type(x)",
        "hint": "В Python используется встроенная функция type() для определения типа объекта."
      },
      {
        "question": "Что такое матрица ошибок (confusion matrix)?",
        "options": [
          "Таблица для отслеживания ошибок в коде",
          "Матрица для визуализации производительности модели классификации",
          "Способ измерения времени выполнения алгоритма",
          "Инструмент для отладки нейронных сетей"
        ],
        "correct_answer": "Матрица для визуализации производительности модели классификации",
        "hint": "Матрица ошибок показывает правильные и неправильные предсказания для каждого класса."
      },
      {
        "question": "Что делает оператор ** в Python?",
        "options": [
          "Умножение",
          "Возведение в степень",
          "Логическое И",
          "Деление"
        ],
        "correct_answer": "Возведение в степень",
        "hint": "Оператор ** используется для возведения числа в степень."
      },
      {
        "question": "Что такое cross-validation (перекрестная проверка)?",
        "options": [
          "Метод проверки синтаксиса кода",
          "Техника оценки производительности модели на разных подмножествах данных",
          "Способ визуализации данных",
          "Алгоритм машинного обучения"
        ],
        "correct_answer": "Техника оценки производительности модели на разных подмножествах данных",
        "hint": "Cross-validation помогает оценить, насколько хорошо модель будет работать на новых данных."
      },
      {
        "question": "Какой результат: bool([])",
        "options": [
          "True",
          "False",
          "None",
          "Ошибка"
        ],
        "correct_answer": "False",
        "hint": "Пустые контейнеры (список, словарь, строка) в Python считаются False."
      },
      {
        "question": "Что такое feature engineering?",
        "options": [
          "Создание новых программных функций",
          "Процесс создания и выбора признаков для модели машинного обучения",
          "Разработка пользовательского интерфейса",
          "Оптимизация производительности алгоритмов"
        ],
        "correct_answer": "Процесс создания и выбора признаков для модели машинного обучения",
        "hint": "Feature engineering включает преобразование сырых данных в полезные признаки."
      },
      {
        "question": "Что выведет: print('Hello' + ' ' + 'World')",
        "options": [
          "Hello World",
          "HelloWorld",
          "Hello + World",
          "Ошибка"
        ],
        "correct_answer": "Hello World",
        "hint": "Оператор + для строк выполняет конкатенацию (склеивание)."
      },
      {
        "question": "Какая метрика лучше для несбалансированных данных?",
        "options": [
          "Accuracy (точность)",
          "F1-score",
          "Время выполнения",
          "Количество параметров модели"
        ],
        "correct_answer": "F1-score",
        "hint": "F1-score учитывает как точность, так и полноту, что важно для несбалансированных классов."
      }
    ]
  }
}