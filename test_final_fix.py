#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã
"""
import requests
import sqlite3
import json
from utils.database import DatabaseManager

def test_database_direct():
    """–¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞–ø—Ä—è–º—É—é...")
    
    conn = sqlite3.connect('interview_prep.db')
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    cursor.execute('SELECT category, sub_category, COUNT(*) FROM questions GROUP BY category, sub_category ORDER BY category, sub_category')
    results = cursor.fetchall()
    
    print("üìä –í–æ–ø—Ä–æ—Å—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
    for row in results:
        print(f"  {row[0]} -> {row[1] or 'NULL'}: {row[2]} questions")
    
    conn.close()

def test_database_methods():
    """–¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ DatabaseManager"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ DatabaseManager...")
    
    db = DatabaseManager()
    
    # –¢–µ—Å—Ç —Å–∫—Ä–∏–Ω–∏–Ω–≥–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    screening = db.get_questions_by_subcategory('Screening Test', '–¢–µ—Å—Ç')
    print(f"‚úÖ Screening Test -> –¢–µ—Å—Ç: {len(screening)} questions")
    
    # –¢–µ—Å—Ç Python –≤–æ–ø—Ä–æ—Å–æ–≤
    python_basic = db.get_questions_by_subcategory('Python', '–û—Å–Ω–æ–≤—ã Python')
    print(f"‚úÖ Python -> –û—Å–Ω–æ–≤—ã Python: {len(python_basic)} questions")
    
    # –¢–µ—Å—Ç –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    categories = db.get_all_categories()
    print(f"‚úÖ –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {categories}")

def test_api_endpoints():
    """–¢–µ—Å—Ç API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...")
    
    try:
        # –¢–µ—Å—Ç API –º–æ–¥—É–ª–µ–π
        r = requests.get('http://localhost:5000/api/modules', timeout=5)
        modules = r.json()
        print(f"‚úÖ /api/modules: {len(modules)} modules loaded")
        
        # –¢–µ—Å—Ç API —Å–∫—Ä–∏–Ω–∏–Ω–≥–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
        r = requests.get('http://localhost:5000/api/questions/Screening%20Test?subcategory=–¢–µ—Å—Ç', timeout=5)
        questions = r.json()
        print(f"‚úÖ Screening Test questions: {len(questions)} questions")
        
        # –¢–µ—Å—Ç API Python –≤–æ–ø—Ä–æ—Å–æ–≤
        r = requests.get('http://localhost:5000/api/questions/Python?subcategory=–û—Å–Ω–æ–≤—ã%20Python', timeout=5)
        questions = r.json()
        print(f"‚úÖ Python questions: {len(questions)} questions")
        
    except Exception as e:
        print(f"‚ùå API Error: {e}")

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å–∏—Å—Ç–µ–º—ã...\n")
    
    test_database_direct()
    test_database_methods() 
    test_api_endpoints()
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    main()