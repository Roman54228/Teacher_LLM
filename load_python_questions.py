#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ Python –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ questions.json
"""
import json
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils.database import DatabaseManager

def load_python_questions():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã Python –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã Python...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db_manager = DatabaseManager()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –∏–∑ JSON —Ñ–∞–π–ª–∞
    with open('data/questions.json', 'r', encoding='utf-8') as f:
        questions_data = json.load(f)
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "Python" –µ—Å–ª–∏ –µ—Å—Ç—å
    print("üóëÔ∏è –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 'Python'...")
    db_manager.clear_category_questions('Python')
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ Python –≤–æ–ø—Ä–æ—Å—ã
    print("‚ûï –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ Python –≤–æ–ø—Ä–æ—Å—ã...")
    
    python_questions = questions_data.get('Python', [])
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ Python –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–ø—Ä—è–º—É—é
    count = db_manager.load_questions_to_db({'Python': python_questions})
    
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ {count} –≤–æ–ø—Ä–æ—Å–æ–≤ Python!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
    python_questions_db = db_manager.get_questions_by_category('Python')
    print(f"üìä –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–æ {len(python_questions_db)} –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 'Python'")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    subcategories = db_manager.get_subcategories_by_category('Python')
    print(f"üìÇ –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Python: {subcategories}")
    
    return True

if __name__ == "__main__":
    try:
        load_python_questions()
        print("üêç Python —Ç–µ—Å—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
        import traceback
        traceback.print_exc()